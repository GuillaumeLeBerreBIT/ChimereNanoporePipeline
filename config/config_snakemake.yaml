################################# CONFIG FILE #################################
# The path to the folder contating all the input files (fastq). Can use relative/aboslute paths. 
startfolder: "../Cmaenas_minion_data"

# Using a unique identifier this for creating folder/file names. Using different names to save the rsults in different runs. 
# WATCH OUT! Pre used identifier where same files are still repsent may results in rewriting files or combine files from different experiments.
# Identifier can also be used as species identifier, to in the future add files of previously used species to get more results.
identifier: "fastq_runid_211"

# The mitochondriol genes
genes: ["ATP6","ATP8","COX1","COX2","COX3","CYTB","NAD1", "NAD2","NAD3","NAD4","NAD4L","NAD5","NAD6"]

# PROWLER
prowler:
  # Select L to clip leading Ns, T to trim trialing Ns and LT to trim both (default=LT)
  clip: "LT"
  # The fragmetation mode default U0
  fragments: "U0"
  # Set the trimming algorithm Static == "S" OR Dynamic == "D"
  trimmode: "D"
  # Set the quality score trimming treshold.
  qscore: 7
  # Change the size of the trimming window
  windowsize: 100
  # The minimum acceptable numer of bases in a read
  minlen: 100
  # Select a maximum data subsample in MB (default = 0, entire sample)
  datamax: 0

# Give the number of bases as minimum treshold to filter the fasta file one. 
filterSACRA:
  bases: 50

Diamond:
  # The maximum number of target sequences per query to report alignments for
  max-target-seq: 1
  # Format of the output file: 6 == BLAST tabular format, 5 == BLAST XML, 0 == Pairwise alignemnt, ...
  output-format: 6

filtDIA:
  # The minimum percentage Identity. 
  idperc: 70
  # The min length residues of a sequence. 
  len: 20
  # Set the max evalue to filter the BLASTX results on
  # E-value is seen as string in YAML file, thats how it works. In python convert to float 
  eval: 10e-6

## SACRA
# all vs all pairwise alignment of input long-read by LAST aligner for constructing aligned read clusters (ARCs)
alignment:
  R: "01"
  u: "NEAR"
  # Gap existence cost of LAST aligner
  a: 0 
  # Insertion existence cost of LAST aligner
  A: 10 
  # Gap extension cost of LAST aligner
  b: 15 
  # Insertion extension cost of LAST aligner
  B: 7 
  S: 1  
  f: "BlastTab+"
# Detect the partially aligned reads (PARs) and candidate chimeric positions from the alignment result of STEP 1, 
# and obtain the depth of PARs at that positions.
parsdepth:
  # Minimum alignment length
  al: 100 
  # Minimum terminal length of unaligned region of PARs
  tl: 50 
  # Minimum depth of PARs
  pd: 1 
  # Alignment identity threshold of PARs
  id: 75
# Calculate the depth of continuously aligned reads (CARs) and the PARs/CARs ratio (PC ratio) at the candidate chimeric positions.
pcratio:
  # Minimum length of alignment start/end position from candidate chimeric position
  ad: 50 
  # Alignment identity threshold of CARs
  id: 75

mpc:
  # If the mPC ratio is calculated from spike-in reference genome, set it to true, otherwise, set it false.
  sp: "false"
  # PATH to the spike-in reference genome.
  rf: "lambda.fasta"
  R: "01"
  u: "NEAR"
  # Gap existence cost of LAST aligner.
  a: 8
  # Insertion existence cost of LAST aligner
  A: 16 
  # Gap extension cost of LAST aligner
  b: 12 
  # Insertion extension cost of LAST aligner
  B: 5
  S: 1  
  f: "BlastTab+"
  # Alignment identity threshold
  id: 95
  # Minimum alignment length
  al: 50
  # Threshold of the unaligned length for detecting chimeric reads
  lt: 50
# Split the chimeric read at the chimeric positions detected by STEP 3
split:
  # Minimum PC ratio (default: 10%). SACRA detects the chimeric positions with PC ratio greater than this threshold.
  pc: 10
  # Minimum depth of PARs + CARs
  dp: 0 
  # Sliding windows threshold (default: 100bp). For detecting the most probable chimeric position from a chimeric junction with similar sequence, SACRA detects the chimeric position with highest PARs depth in this threshold windows.
  sl: 100

# NCBI's codon table. 
mitos2:
  # 5 == Invertebrate, 2 == Vertebrate, 4 == Mold, 14 Alternative flatworm, 9 == Echinoderm, 13 == Ascidian
  gencode: 5